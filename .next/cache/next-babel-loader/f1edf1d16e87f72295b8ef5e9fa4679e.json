{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jcfoj\\\\Downloads\\\\MyDailyStatus\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\nexport default function App(props) {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  }, []);\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"py-4 px-4 rounded bg-gray font-bold shadow-xl text-center mx-auto text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => __jsx(\"tr\", {\n    className: \"py-4 px-4 rounded bg-pink-800 font-bold shadow-xl text-center mx-auto text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, checkin.id === props.user.sub && 'Seu Status'), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, JSON.stringify(`Latitude: ${checkin.coords.lat} + Longitude: ${checkin.coords.long}`)), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, 'Status: ' + checkin.status), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, 'Distância até você: ' + checkin.distance)))));\n}\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  const today = new Date();\n  const currentDate = today.getFullYear() + \"-\" + today.getMonth() + \"-\" + today.getDate();\n\n  if (session) {\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      user: {\n        isAuth: false,\n        user: {}\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/jcfoj/Downloads/MyDailyStatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","JSON","stringify","coords","lat","long","status","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","latitude","longitude","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport auth0 from '../lib/auth0';\r\nimport router from 'next/router';\r\nimport { db } from '../lib/db';\r\nimport { distance } from '../lib/geo';\r\n\r\nexport default function App(props) {\r\n  useEffect(() => {\r\n    if (!props.isAuth) {\r\n      router.push('/');\r\n    } else if (props.forceCreate) {\r\n      router.push('/create-status');\r\n    }\r\n  }, []);\r\n\r\n  if (!props.isAuth || props.forceCreate) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='py-4 px-4 rounded bg-gray font-bold shadow-xl text-center mx-auto text-white'>Status próximos a você</h1>\r\n      <table>\r\n        {props.checkins.map(checkin => (\r\n          <tr className='py-4 px-4 rounded bg-pink-800 font-bold shadow-xl text-center mx-auto text-white'>\r\n            <td>{checkin.id === props.user.sub && 'Seu Status'}</td>\r\n            <td>{JSON.stringify(`Latitude: ${checkin.coords.lat} + Longitude: ${checkin.coords.long}`)}</td>\r\n            <td>{'Status: ' + checkin.status}</td>\r\n            <td>{'Distância até você: ' + checkin.distance}</td>\r\n\r\n          </tr>\r\n      ))}\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req);\r\n  const today = new Date();\r\n  const currentDate = today.getFullYear() + \"-\" + today.getMonth() + \"-\" + today.getDate();\r\n  if (session) {\r\n    const todaysCheckin = await db\r\n      .collection('markers')\r\n      .doc(currentDate)\r\n      .collection('checks')\r\n      .doc(session.user.sub)\r\n      .get()\r\n\r\n    const todaysData = todaysCheckin.data();\r\n    let forceCreate = true;\r\n    if (todaysData) {\r\n      forceCreate = false;\r\n      const checkins = await db\r\n        .collection('markers')\r\n        .doc(currentDate)\r\n        .collection('checks')\r\n        .near({\r\n          center: todaysData.coordinates,\r\n          radius: 1000\r\n        })\r\n        .get()\r\n      const checkinsList = [];\r\n      checkins.docs.forEach(doc => {\r\n        checkinsList.push({\r\n          id: doc.id,\r\n          status: doc.data().status,\r\n          coords: {\r\n            lat: doc.data().coordinates.latitude,\r\n            long: doc.data().coordinates.longitude\r\n          },\r\n          distance: distance(\r\n                      todaysData.coordinates.latitude, \r\n                      todaysData.coordinates.longitude, \r\n                      doc.data().coordinates.latitude, \r\n                      doc.data().coordinates.longitude \r\n                    ).toFixed(2)\r\n        })\r\n      })\r\n      return {\r\n        props: {\r\n          isAuth: true,\r\n          user: session.user,\r\n          forceCreate: false,\r\n          checkins: checkinsList\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      props: {\r\n        isAuth: true,\r\n        user: session.user,\r\n        forceCreate\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      user: {\r\n        isAuth: false,\r\n        user: {},\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}